{"version":3,"sources":["webpack:///./src/app/single-survey/single-survey.module.ts","webpack:///./src/app/single-survey/single-survey.page.html","webpack:///./src/app/single-survey/single-survey.page.scss","webpack:///./src/app/single-survey/single-survey.page.ts"],"names":[],"mappings":"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","file":"single-survey-single-survey-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SingleSurveyPage } from './single-survey.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SingleSurveyPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [SingleSurveyPage]\n})\nexport class SingleSurveyPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>{{name | titlecase}}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list>\\n    <ion-item style=\\\"width: 90% !important;background-color: #fff;width: 100%;margin: 20px\\\">\\n            <ion-label>{{name | titlecase}}</ion-label>\\n            <ion-select placeholder=\\\"Select Question\\\" name=\\\"radioBtn\\\"   (ionChange)=\\\"onchangeradio($event)\\\">\\n                    <ion-select-option *ngFor=\\\"let radio of data;index as i\\\" value=\\\"{{radio.id}}\\\"  >{{i+1}} - {{radio?.statement | titlecase}}</ion-select-option>\\n                </ion-select>\\n    </ion-item>\\n  </ion-list>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NpbmdsZS1zdXJ2ZXkvc2luZ2xlLXN1cnZleS5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport {AlertController, ToastController} from '@ionic/angular';\n\n@Component({\n  selector: 'app-single-survey',\n  templateUrl: './single-survey.page.html',\n  styleUrls: ['./single-survey.page.scss'],\n})\nexport class SingleSurveyPage implements OnInit {\n\n  constructor(private routr: ActivatedRoute, private srv: AuthService , private router: Router ,public toastController: ToastController, public alertController: AlertController) { }\n  id: any;\n  name: any;\n  questionid: any;\n  send = {radioId: '', memberFromAppId: '' , questionId: ''};\n  data = [];\n  ngOnInit() {\n\n  }\n  ionViewWillEnter() {\n    this.id = this.routr.snapshot.params['id'];\n    this.srv.getsinglesurvey(this.id).subscribe((data: any) => {\n      this.data = data.radios;\n       this.name = data.statement;\n     })\n  }\n  async onchangeradio(event) {\n\n      \n    const alert = await this.alertController.create({\n      header: 'Alert',\n      subHeader: 'Subtitle',\n      message: 'This is an alert message.',\n      buttons: ['OK']\n    });\n      const toast = await this.toastController.create({\n          message: 'survey save successfull.',\n          duration: 1800\n      });\n\n      const secondtime = await this.toastController.create({\n          message: 'You are not allowed to submit second time.',\n          duration: 1800\n      });\n\n    let id  = event.detail.value;\n    let  mid = localStorage.getItem('id');\n\n    this.send.radioId = id;\n    this.send.questionId = this.id;\n    this.send.memberFromAppId = mid;\n    console.log(this.send);\n\n    this.srv.answer(this.send).subscribe((data: any) => {\n      console.log(data);\n        if (data.message === 'You are not allowed to submit second time') {\n            secondtime.present();\n            this.router.navigate(['/home']);\n        } else {\n            toast.present();\n            this.router.navigate(['/home']);\n        }\n     });\n\n   }\n\n}\n"],"sourceRoot":""}